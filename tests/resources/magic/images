
#------------------------------------------------------------------------------
# $File: images,v 1.154 2019/02/09 17:56:01 christos Exp $
# images:  file(1) magic for image formats (see also "iff", and "c-lang" for
# XPM bitmaps)
#
# originally from jef@helios.ee.lbl.gov (Jef Poskanzer),
# additions by janl@ifi.uio.no as well as others. Jan also suggested
# merging several one- and two-line files into here.
#
# little magic: PCX (first byte is 0x0a)

# Targa - matches `povray', `ppmtotga' and `xv' outputs
# by Philippe De Muyter <phdm@macqel.be>
# URL: http://justsolve.archiveteam.org/wiki/TGA
# Reference: http://www.dca.fee.unicamp.br/~martino/disciplinas/ea978/tgaffs.pdf
# Update: Joerg Jenderek
# at 2, byte ImgType must be 1, 2, 3, 9, 10 or 11
#	,32 or 33 (both not observed)
# at 1, byte CoMapType must be 1 if ImgType is 1 or 9, 0 otherwise
#	or theoretically 2-128 reserved for use by Truevision or 128-255 may be used for developer applications
# at 3, leshort Index is 0 for povray, ppmtotga and xv outputs
# `xv' recognizes only a subset of the following (RGB with pixelsize = 24)
# `tgatoppm' recognizes a superset (Index may be anything)
#
# test of Color Map Type 0~no 1~color map
# and Image Type 1 2 3 9 10 11 32 33
# and Color Map Entry Size 0 15 16 24 32
0	ubequad&0x00FeC400000000C0	0
# skip more garbage like *.iso by looking for positive image type
>2	ubyte			>0
# skip some compiled terminfo like xterm+tmux by looking for image type less equal 33
>>2	ubyte			<34
# skip arches.3200 , Finder.Root , Slp.1 by looking for low pixel depth 1 8 15 16 24 32
>>>16	ubyte			1
>>>>0		use		tga-image
>>>16	ubyte			8
>>>>0		use		tga-image
>>>16	ubyte			15
>>>>0		use		tga-image
>>>16	ubyte			16
>>>>0		use		tga-image
>>>16	ubyte			24
>>>>0		use		tga-image
>>>16	ubyte			32
>>>>0		use		tga-image
#	display tga bitmap image information
0	name				tga-image
>2	ubyte		<34		Targa image data|2394
!:mime	image/x-tga
!:apple	????TPIC
# normal extension .tga but some Truevision products used others:
# tpic (Apple),icb (Image Capture Board),vda (Video Display Adapter),vst (NuVista),win (UNSURE about that)
!:ext	tga/tpic/icb/vda/vst
# image type 1 2 3 9 10 11 32 33
>>2	ubyte&0xF7	1		- Map|2395
>>2	ubyte&0xF7	2		- RGB|2396
# alpha channel
>>>17	ubyte&0x0F	>0		\bA|2397
>>2	ubyte&0xF7	3		- Mono|2398
# type not found, but by http://www.fileformat.info/format/tga/corion.htm
# Compressed color-mapped data, using Huffman, Delta, and runlength encoding
>>2	ubyte		32		- Color|2399
# Compressed color-mapped data, using Huffman, Delta, and RLE. 4-pass quadtree- type process
>>2	ubyte		33		- Color|2399
# Color Map Type 0~no 1~color map
>>1	ubyte		1		(
# first color map entry, 0 normal
>>>3	uleshort	>0		\b%d-
# color map length 0 2 1dh 3bh d9h 100h
>>>5	uleshort	x		\b%d)
# 8~run length encoding bit
>>2	ubyte&0x08	8		- RLE
# gimp can create big pictures!
>>12	uleshort	>0		%d x
>>12	uleshort	=0		65536 x
# image height. 0 interpreted as 65536
>>14	uleshort	>0		%d
>>14	uleshort	=0		65536
# Image Pixel depth 1 8 15 16 24 32
>>16	ubyte		x		x %d
# X origin of image. 0 normal
>>8	uleshort	>0		+%d
# Y origin of image. 0 normal; positive for top
>>10	uleshort	>0		+%d
# Image descriptor: bits 3-0 give the alpha channel depth, bits 5-4 give direction
>>17	ubyte&0x0F	>0		- %d-bit alpha
# bits 5-4 give direction. normal bottom left
>>17	ubyte		&0x20		- top
#>17	ubyte		^0x20		- bottom
>>17	ubyte		&0x10		- right
#>17	ubyte		^0x10		- left
# some info say other bits 6-7 should be zero
# but data storage interleave by http://www.fileformat.info/format/tga/corion.htm
# 00 - no interleave;01 - even/odd interleave; 10 - four way interleave; 11 - reserved
#>17	ubyte&0xC0	0x00		- no interleave
>>17	ubyte&0xC0	0x40		- interleave
>>17	ubyte&0xC0	0x80		- four way interleave
>>17	ubyte&0xC0	0xC0		- reserved
# positive length implies identification field
>>0	ubyte		>0
>>>18	string		x		"%s"
# last 18 bytes of newer tga file footer signature
>>18	search/4261301/s	TRUEVISION-XFILE.\0
# extension area offset if not 0
>>>&-8		ulelong			>0
# length of the extension area. normal 495 for version 2.0
>>>>(&-4.l)	uleshort		0x01EF
# AuthorName[41]
>>>>>&0		string			>\0		- author "%-.40s"
# Comment[324]=4 * 80 null terminated
>>>>>&41		string			>\0		- comment "%-.80s"
# date
>>>>>&365	ubequad&0xffffFFFFffff0000	!0
# Day
>>>>>>&-6		uleshort		x		%d
# Month
>>>>>>&-8		uleshort		x		\b-%d
# Year
>>>>>>&-4		uleshort		x		\b-%d
# time
>>>>>&371	ubequad&0xffffFFFFffff0000	!0
# hour
>>>>>>&-8		uleshort		x		%d
# minutes
>>>>>>&-6		uleshort		x		\b:%.2d
# second
>>>>>>&-4		uleshort		x		\b:%.2d
# JobName[41]
>>>>>&377		string			>\0		- job "%-.40s"
# JobHour Jobminute Jobsecond
>>>>>&418	ubequad&0xffffFFFFffff0000	!0
>>>>>>&-8		uleshort		x		%d
>>>>>>&-6		uleshort		x		\b:%.2d
>>>>>>&-4		uleshort		x		\b:%.2d
# SoftwareId[41]
>>>>>&424		string			>\0		- %-.40s
# SoftwareVersionNumber
>>>>>&424	ubyte				>0
>>>>>>&40		uleshort/100		x		%d
>>>>>>&40		uleshort%100		x		\b.%d
# VersionLetter
>>>>>>&42		ubyte			>0x20		\b%c
# KeyColor
>>>>>&468		ulelong			>0		- keycolor 0x%8.8x
# Denominator of Pixel ratio. 0~no pixel aspect
>>>>>&474	uleshort			>0
# Numerator
>>>>>>&-4		uleshort		>0		- aspect %d
>>>>>>&-2		uleshort		x		\b/%d
# Denominator of Gamma ratio. 0~no Gamma value
>>>>>&478	uleshort			>0
# Numerator
>>>>>>&-4		uleshort		>0		- gamma %d
>>>>>>&-2		uleshort		x		\b/%d
# ColorOffset
#>>>>&480	ulelong			x		- col offset 0x%8.8x
# StampOffset
#>>>>&484	ulelong			x		- stamp offset 0x%8.8x
# ScanOffset
#>>>>&488	ulelong			x		- scan offset 0x%8.8x
# AttributesType
#>>>>&492	ubyte			x		- Attributes 0x%x
## EndOfTGA

# PBMPLUS images
# The next byte following the magic is always whitespace.
# strength is changed to try these patterns before "x86 boot sector"
0	name		netpbm
>3	regex/s		=[0-9]{1,50}\ [0-9]{1,50}	Netpbm image data|2400
>>&0	regex		=[0-9]{1,50} 			\b, size = %s x|2400
>>>&0	regex		=[0-9]{1,50}			\b %s|2400

0	search/1	P1
>0	regex/4		P1[\040\t\f\r\n]
>>0	use		netpbm
>>0	string		x	\b, bitmap
!:strength + 65
!:mime	image/x-portable-bitmap

0	search/1	P2
>0	regex/4		P2[\040\t\f\r\n]
>>0	use		netpbm
>>0	string		x	\b, greymap
!:strength + 65
!:mime	image/x-portable-greymap

0	search/1	P3
>0	regex/4		P3[\040\t\f\r\n]
>>0	use		netpbm
>>0	string		x	\b, pixmap
!:strength + 65
!:mime	image/x-portable-pixmap

0	string		P4
>0	regex/4		P4[\040\t\f\r\n]
>>0	use		netpbm
>>0	string		x	\b, rawbits, bitmap
!:strength + 65
!:mime	image/x-portable-bitmap

0	string		P5
>0	regex/4		P5[\040\t\f\r\n]
>>0	use		netpbm
>>0	string		x	\b, rawbits, greymap
!:strength + 65
!:mime	image/x-portable-greymap

0	string		P6
>0	regex/4		P6[\040\t\f\r\n]
>>0	use		netpbm
>>0	string		x	\b, rawbits, pixmap
!:strength + 65
!:mime	image/x-portable-pixmap

0	string		P7		Netpbm PAM image file|2401
!:mime	image/x-portable-pixmap

# From: bryanh@giraffe-data.com (Bryan Henderson)
0	string		\117\072	Solitaire Image Recorder format|2402
>4	string		\013		MGI Type 11|2403
>4	string		\021		MGI Type 17|2404
0	string		.MDA		MicroDesign data|2405
>21	byte		48		version 2|2406
>21	byte		51		version 3|2407
0	string		.MDP		MicroDesign page data|2408
>21	byte		48		version 2|2409
>21	byte		51		version 3|2410

# NIFF (Navy Interchange File Format, a modification of TIFF) images
# [GRR:  this *must* go before TIFF]
0	string		IIN1		NIFF image data|2411
!:mime	image/x-niff

# Canon RAW version 1 (CRW) files are a type of Canon Image File Format
# (CIFF) file. These are apparently all little-endian.
# From: Adam Buchbinder <adam.buchbinder@gmail.com>
# URL: http://www.sno.phy.queensu.ca/~phil/exiftool/canon_raw.html
0	string		II\x1a\0\0\0HEAPCCDR	Canon CIFF raw image data|2412
!:mime	image/x-canon-crw
>16	leshort		x	\b, version %d.|2412
>14	leshort		x	\b%d|2412

# Canon RAW version 2 (CR2) files are a kind of TIFF with an extra magic
# number. Put this above the TIFF test to make sure we detect them.
# These are apparently all little-endian.
# From: Adam Buchbinder <adam.buchbinder@gmail.com>
# URL: http://libopenraw.freedesktop.org/wiki/Canon_CR2
0	string		II\x2a\0\x10\0\0\0CR	Canon CR2 raw image data|2413
!:mime	image/x-canon-cr2
!:strength +80
>10	byte		x	\b, version %d.|2413
>11	byte		x	\b%d|2413

# Tag Image File Format, from Daniel Quinlan (quinlan@yggdrasil.com)
# The second word of TIFF files is the TIFF version number, 42, which has
# never changed.  The TIFF specification recommends testing for it.
0	string		MM\x00\x2a	TIFF image data, big-endian|2414
!:strength +70
!:mime	image/tiff
>(4.L)	use		\^tiff_ifd
0	string		II\x2a\x00	TIFF image data, little-endian|2415
!:mime	image/tiff
!:strength +70
>(4.l)	use		tiff_ifd

0	name		tiff_ifd
>0	leshort		x		\b, direntries=%d
>2	use		tiff_entry

0	name		tiff_entry
# NewSubFileType
>0	leshort		0xfe
>>12	use		tiff_entry
>0	leshort		0x100
>>4	lelong		1
>>>12	use		tiff_entry
>>>8	leshort		x		\b, width=%d
>0	leshort		0x101
>>4	lelong		1
>>>8	leshort		x		\b, height=%d
>>>12	use		tiff_entry
>0	leshort		0x102
>>8	leshort		x		\b, bps=%d
>>12	use		tiff_entry
>0	leshort		0x103
>>4	lelong		1		\b, compression=
>>>8	leshort		1		\bnone
>>>8	leshort		2		\bhuffman
>>>8	leshort		3		\bbi-level group 3
>>>8	leshort		4		\bbi-level group 4
>>>8	leshort		5		\bLZW
>>>8	leshort		6		\bJPEG (old)
>>>8	leshort		7		\bJPEG
>>>8	leshort		8		\bdeflate
>>>8	leshort		9		\bJBIG, ITU-T T.85
>>>8	leshort		0xa		\bJBIG, ITU-T T.43
>>>8	leshort		0x7ffe		\bNeXT RLE 2-bit
>>>8	leshort		0x8005		\bPackBits (Macintosh RLE)
>>>8	leshort		0x8029		\bThunderscan RLE
>>>8	leshort		0x807f		\bRasterPadding (CT or MP)
>>>8	leshort		0x8080		\bRLE (Line Work)
>>>8	leshort		0x8081		\bRLE (High-Res Cont-Tone)
>>>8	leshort		0x8082		\bRLE (Binary Line Work)
>>>8	leshort		0x80b2		\bDeflate (PKZIP)
>>>8	leshort		0x80b3		\bKodak DCS
>>>8	leshort		0x8765		\bJBIG
>>>8	leshort		0x8798		\bJPEG2000
>>>8	leshort		0x8799		\bNikon NEF Compressed
>>>8	default		x
>>>>8	leshort		x		\b(unknown 0x%x)
>>>12	use		tiff_entry
>0	leshort		0x106		\b, PhotometricIntepretation=
>>8	clear		x
>>8	leshort		0		\bWhiteIsZero
>>8	leshort		1		\bBlackIsZero
>>8	leshort		2		\bRGB
>>8	leshort		3		\bRGB Palette
>>8	leshort		4		\bTransparency Mask
>>8	leshort		5		\bCMYK
>>8	leshort		6		\bYCbCr
>>8	leshort		8		\bCIELab
>>8	default		x
>>>8	leshort		x		\b(unknown=0x%x)
>>12	use		tiff_entry
# FillOrder
>0	leshort		0x10a
>>4	lelong		1
>>>12	use		tiff_entry
# DocumentName
>0	leshort		0x10d
>>(8.l)	string		x		\b, name=%s
>>>12	use		tiff_entry
# ImageDescription
>0	leshort		0x10e
>>(8.l)	string		x		\b, description=%s
>>>12	use		tiff_entry
# Make
>0	leshort		0x10f
>>(8.l)	string		x		\b, manufacturer=%s
>>>12	use		tiff_entry
# Model
>0	leshort		0x110
>>(8.l)	string		x		\b, model=%s
>>>12	use		tiff_entry
# StripOffsets
>0	leshort		0x111
>>12	use		tiff_entry
# Orientation
>0	leshort		0x112		\b, orientation=
>>8	leshort		1		\bupper-left
>>8	leshort		3		\blower-right
>>8	leshort		6		\bupper-right
>>8	leshort		8		\blower-left
>>8	leshort		9		\bundefined
>>8	default		x
>>>8	leshort		x		\b[*%d*]
>>12	use		tiff_entry
# XResolution
>0	leshort		0x11a
>>8	lelong		x		\b, xresolution=%d
>>12	use		tiff_entry
# YResolution
>0	leshort		0x11b
>>8	lelong		x		\b, yresolution=%d
>>12	use		tiff_entry
# ResolutionUnit
>0	leshort		0x128
>>8	leshort		x		\b, resolutionunit=%d
>>12	use		tiff_entry
# Software
>0	leshort		0x131
>>(8.l)	string		x		\b, software=%s
>>12	use		tiff_entry
# Datetime
>0	leshort		0x132
>>(8.l)	string		x		\b, datetime=%s
>>12	use		tiff_entry
# HostComputer
>0	leshort		0x13c
>>(8.l)	string		x		\b, hostcomputer=%s
>>12	use		tiff_entry
# WhitePoint
>0	leshort		0x13e
>>12	use		tiff_entry
# PrimaryChromaticities
>0	leshort		0x13f
>>12	use		tiff_entry
# YCbCrCoefficients
>0	leshort		0x211
>>12	use		tiff_entry
# YCbCrPositioning
>0	leshort		0x213
>>12	use		tiff_entry
# ReferenceBlackWhite
>0	leshort		0x214
>>12	use		tiff_entry
# Copyright
>0	leshort		0x8298
>>(8.l)	string		x		\b, copyright=%s
>>12	use		tiff_entry
# ExifOffset
>0	leshort		0x8769
>>12	use		tiff_entry
# GPS IFD
>0	leshort		0x8825		\b, GPS-Data
>>12	use		tiff_entry

#>0	leshort		x		\b, unknown=0x%x
#>>12	use		tiff_entry

0	string		MM\x00\x2b	Big TIFF image data, big-endian|2416
!:mime	image/tiff
0	string		II\x2b\x00	Big TIFF image data, little-endian|2417
!:mime	image/tiff

# PNG [Portable Network Graphics, or "PNG's Not GIF"] images
# (Greg Roelofs, newt@uchicago.edu)
# (Albert Cahalan, acahalan@cs.uml.edu)
#
# 137 P N G \r \n ^Z \n [4-byte length] I H D R [HEAD data] [HEAD crc] ...
#

# IHDR parser
0	name		png-ihdr
>0	belong		x		\b, %d x
>4	belong		x		%d,
>8	byte		x		%d-bit
>9	byte		0		grayscale,
>9	byte		2		\b/color RGB,
>9	byte		3		colormap,
>9	byte		4		gray+alpha,
>9	byte		6		\b/color RGBA,
#>10	byte		0		deflate/32K,
>12	byte		0		non-interlaced
>12	byte		1		interlaced

# Standard PNG image.
0	string		\x89PNG\x0d\x0a\x1a\x0a\x00\x00\x00\x0DIHDR	PNG image data|2418
!:mime	image/png
!:ext   png
!:strength +10
>16	use		png-ihdr

# Apple CgBI PNG image.
0	string		\x89PNG\x0d\x0a\x1a\x0a\x00\x00\x00\x04CgBI
>24	string  	\x00\x00\x00\x0DIHDR	PNG image data (CgBI)|2419
!:mime	image/png
!:ext   png
!:strength +10
>>32	use		png-ihdr

# possible GIF replacements; none yet released!
# (Greg Roelofs, newt@uchicago.edu)
#
# GRR 950115:  this was mine ("Zip GIF"):
0	string		GIF94z		ZIF image (GIF+deflate alpha)|2420
!:mime	image/x-unknown
#
# GRR 950115:  this is Jeremy Wohl's Free Graphics Format (better):
#
0	string		FGF95a		FGF image (GIF+deflate beta)|2421
!:mime	image/x-unknown
#
# GRR 950115:  this is Thomas Boutell's Portable Bitmap Format proposal
# (best; not yet implemented):
#
0	string		PBF		PBF image (deflate compression)|2422
!:mime	image/x-unknown

# GIF
# Strength set up to beat 0x55AA DOS/MBR signature word lookups (+65)
0	string		GIF8		GIF image data|2423
!:strength +80
!:mime	image/gif
!:apple	8BIMGIFf
>4	string		7a		\b, version 8%s,|2424
>4	string		9a		\b, version 8%s,|2425
>6	leshort		>0		%d x
>8	leshort		>0		%d
#>10	byte		&0x80		color mapped,
#>10	byte&0x07	=0x00		2 colors
#>10	byte&0x07	=0x01		4 colors
#>10	byte&0x07	=0x02		8 colors
#>10	byte&0x07	=0x03		16 colors
#>10	byte&0x07	=0x04		32 colors
#>10	byte&0x07	=0x05		64 colors
#>10	byte&0x07	=0x06		128 colors
#>10	byte&0x07	=0x07		256 colors

# ITC (CMU WM) raster files.  It is essentially a byte-reversed Sun raster,
# 1 plane, no encoding.
0	string		\361\0\100\273	CMU window manager raster image data|2426
>4	lelong		>0		%d x|2426
>8	lelong		>0		%d,|2426
>12	lelong		>0		%d-bit|2426

# Magick Image File Format
0	string		id=ImageMagick	MIFF image data|2427

# Artisan
0	long		1123028772	Artisan image data|2428
>4	long		1		\b, rectangular 24-bit|2429
>4	long		2		\b, rectangular 8-bit with colormap|2430
>4	long		3		\b, rectangular 32-bit (24-bit with matte)|2431

# FIG (Facility for Interactive Generation of figures), an object-based format
0	search/1	#FIG		FIG image text|2432
>5	string		x		\b, version %.3s|2432

# PHIGS
0	string		ARF_BEGARF		PHIGS clear text archive|2433
0	string		@(#)SunPHIGS		SunPHIGS|2434
# version number follows, in the form m.n
>40	string		SunBin			binary|2434
>32	string		archive			archive|2434

# GKS (Graphics Kernel System)
0	string		GKSM		GKS Metafile|2435
>24	string		SunGKS		\b, SunGKS|2436

# CGM image files
0	string		BEGMF		clear text Computer Graphics Metafile|2437

# MGR bitmaps  (Michael Haardt, u31b3hs@pool.informatik.rwth-aachen.de)
0	string	yz	MGR bitmap, modern format, 8-bit aligned|2438
0	string	zz	MGR bitmap, old format, 1-bit deep, 16-bit aligned|2439
0	string	xz	MGR bitmap, old format, 1-bit deep, 32-bit aligned|2440
0	string	yx	MGR bitmap, modern format, squeezed|2441

# Fuzzy Bitmap (FBM) images
0	string		%bitmap\0	FBM image data|2442
>30	long		0x31		\b, mono|2443
>30	long		0x33		\b, color|2444

# facsimile data
1	string		PC\ Research,\ Inc	group 3 fax data|2445
>29	byte		0		\b, normal resolution (204x98 DPI)|2446
>29	byte		1		\b, fine resolution (204x196 DPI)|2447
# From: Herbert Rosmanith <herp@wildsau.idv.uni.linz.at>
0	string		Sfff		structured fax file|2448

# From: Joerg Jenderek <joerg.jen.der.ek@gmx.net>
# most files with the extension .EPA and some with .BMP
0	string		\x11\x06	Award BIOS Logo, 136 x 84|2449
!:mime	image/x-award-bioslogo
0	string		\x11\x09	Award BIOS Logo, 136 x 126|2450
!:mime	image/x-award-bioslogo
#0	string		\x07\x1f	BIOS Logo corrupted?
# http://www.blackfiveservices.co.uk/awbmtools.shtml
# http://biosgfx.narod.ru/v3/
# http://biosgfx.narod.ru/abr-2/
0	string		AWBM
>4	leshort		<1981		Award BIOS bitmap|2451
!:mime	image/x-award-bmp
# image width is a multiple of 4
>>4	leshort&0x0003	0
>>>4		leshort	x		\b, %d|2451
>>>6		leshort	x		x %d|2451
>>4	leshort&0x0003	>0		\b,|2451
>>>4	leshort&0x0003	=1
>>>>4		leshort	x		%d+3|2451
>>>4	leshort&0x0003	=2
>>>>4		leshort	x		%d+2|2451
>>>4	leshort&0x0003	=3
>>>>4		leshort	x		%d+1|2451
>>>6		leshort	x		x %d
# at offset 8 starts imagedata followed by "RGB " marker

# PC bitmaps (OS/2, Windows BMP files)  (Greg Roelofs, newt@uchicago.edu)
# http://en.wikipedia.org/wiki/BMP_file_format#DIB_header_.\
# 28bitmap_information_header.29
0	string		BM
>14	leshort		12		PC bitmap, OS/2 1.x format|2452
!:mime	image/x-ms-bmp
>>18	leshort		x		\b, %d x|2452
>>20	leshort		x		%d|2452
>14	leshort		64		PC bitmap, OS/2 2.x format|2453
!:mime	image/x-ms-bmp
>>18	leshort		x		\b, %d x|2453
>>20	leshort		x		%d|2453
>14	leshort		40		PC bitmap, Windows 3.x format|2454
!:mime	image/x-ms-bmp
>>18	lelong		x		\b, %d x|2454
>>22	lelong		x		%d x|2454
>>28	leshort		x		%d|2454
>14	leshort		124		PC bitmap, Windows 98/2000 and newer format|2455
!:mime	image/x-ms-bmp
>>18	lelong		x		\b, %d x|2455
>>22	lelong		x		%d x|2455
>>28	leshort		x		%d|2455
>14	leshort		108		PC bitmap, Windows 95/NT4 and newer format|2456
!:mime	image/x-ms-bmp
>>18	lelong		x		\b, %d x|2456
>>22	lelong		x		%d x|2456
>>28	leshort		x		%d|2456
>14	leshort		128		PC bitmap, Windows NT/2000 format|2457
!:mime	image/x-ms-bmp
>>18	lelong		x		\b, %d x|2457
>>22	lelong		x		%d x|2457
>>28	leshort		x		%d|2457
# Too simple - MPi
#0	string		IC		PC icon data
#0	string		PI		PC pointer image data
#0	string		CI		PC color icon data
#0	string		CP		PC color pointer image data
# Conflicts with other entries [BABYL]
#0	string		BA		PC bitmap array data

# XPM icons (Greg Roelofs, newt@uchicago.edu)
0	search/1	/*\ XPM\ */	X pixmap image text|2458
!:mime	image/x-xpmi

# Utah Raster Toolkit RLE images (janl@ifi.uio.no)
0	leshort		0xcc52		RLE image data,|2459
>6	leshort		x		%d x|2459
>8	leshort		x		%d|2459
>2	leshort		>0		\b, lower left corner: %d|2459
>4	leshort		>0		\b, lower right corner: %d|2459
>10	byte&0x1	=0x1		\b, clear first|2459
>10	byte&0x2	=0x2		\b, no background|2459
>10	byte&0x4	=0x4		\b, alpha channel|2459
>10	byte&0x8	=0x8		\b, comment|2459
>11	byte		>0		\b, %d color channels|2459
>12	byte		>0		\b, %d bits per pixel|2459
>13	byte		>0		\b, %d color map channels|2459

# image file format (Robert Potter, potter@cs.rochester.edu)
0	string		Imagefile\ version-	iff image data|2460
# this adds the whole header (inc. version number), informative but longish
>10	string		>\0		%s|2460

# Sun raster images, from Daniel Quinlan (quinlan@yggdrasil.com)
0	belong		0x59a66a95	Sun raster image data|2461
>4	belong		>0		\b, %d x|2461
>8	belong		>0		%d,|2461
>12	belong		>0		%d-bit,|2461
#>16	belong		>0		%d bytes long,
>20	belong		0		old format,|2461
#>20	belong		1		standard,
>20	belong		2		compressed,|2461
>20	belong		3		RGB,|2461
>20	belong		4		TIFF,|2461
>20	belong		5		IFF,|2461
>20	belong		0xffff		reserved for testing,|2461
>24	belong		0		no colormap|2461
>24	belong		1		RGB colormap|2461
>24	belong		2		raw colormap|2461
#>28	belong		>0		colormap is %d bytes long

# SGI image file format, from Daniel Quinlan (quinlan@yggdrasil.com)
#
# See
#	http://reality.sgi.com/grafica/sgiimage.html
#
0	beshort		474		SGI image data|2462
#>2	byte		0		\b, verbatim
>2	byte		1		\b, RLE|2462
#>3	byte		1		\b, normal precision
>3	byte		2		\b, high precision|2462
>4	beshort		x		\b, %d-D|2462
>6	beshort		x		\b, %d x|2462
>8	beshort		x		%d|2462
>10	beshort		x		\b, %d channel|2462
>10	beshort		!1		\bs|2462
>80	string		>0		\b, "%s"|2462

0	string		IT01		FIT image data|2463
>4	belong		x		\b, %d x|2463
>8	belong		x		%d x|2463
>12	belong		x		%d|2463
#
0	string		IT02		FIT image data|2463
>4	belong		x		\b, %d x|2463
>8	belong		x		%d x|2463
>12	belong		x		%d|2463
#
2048	string		PCD_IPI		Kodak Photo CD image pack file|2464
>0xe02	byte&0x03	0x00		, landscape mode|2465
>0xe02	byte&0x03	0x01		, portrait mode|2466
>0xe02	byte&0x03	0x02		, landscape mode|2465
>0xe02	byte&0x03	0x03		, portrait mode|2466
0	string		PCD_OPA		Kodak Photo CD overview pack file|2467

# FITS format.  Jeff Uphoff <juphoff@tarsier.cv.nrao.edu>
# FITS is the Flexible Image Transport System, the de facto standard for
# data and image transfer, storage, etc., for the astronomical community.
# (FITS floating point formats are big-endian.)
0	string	SIMPLE\ \ =	FITS image data|2468
!:mime	image/fits
!:ext	fits/fts
>109	string	8		\b, 8-bit, character or unsigned binary integer|2468
>108	string	16		\b, 16-bit, two's complement binary integer|2468
>107	string	\ 32		\b, 32-bit, two's complement binary integer|2468
>107	string	-32		\b, 32-bit, floating point, single precision|2468
>107	string	-64		\b, 64-bit, floating point, double precision|2468

# other images
0	string	This\ is\ a\ BitMap\ file	Lisp Machine bit-array-file|2469

# From SunOS 5.5.1 "/etc/magic" - appeared right before Sun raster image
# stuff.
#
0	beshort		0x1010		PEX Binary Archive|2470

# DICOM medical imaging data
# URL:		https://en.wikipedia.org/wiki/DICOM#Data_format
# Note:		"dcm" is the official file name extension
# 		XnView mention also "dc3" and "acr" as file name extension
128	string	DICM			DICOM medical imaging data|2471
!:mime	application/dicom
!:ext dcm/dicom/dic

# XWD - X Window Dump file.
#   As described in /usr/X11R6/include/X11/XWDFile.h
#   used by the xwd program.
#   Bradford Castalia, idaeim, 1/01
#   updated by Adam Buchbinder, 2/09
# The following assumes version 7 of the format; the first long is the length
# of the header, which is at least 25 4-byte longs, and the one at offset 8
# is a constant which is always either 1 or 2. Offset 12 is the pixmap depth,
# which is a maximum of 32.
0	belong	>100
>8	belong	<3
>>12	belong	<33
>>>4	belong	7			XWD X Window Dump image data|2472
!:mime	image/x-xwindowdump
>>>>100	string	>\0			\b, "%s"|2472
>>>>16	belong	x			\b, %dx|2472
>>>>20	belong	x			\b%dx|2472
>>>>12	belong	x			\b%d|2472

# PDS - Planetary Data System
#   These files use Parameter Value Language in the header section.
#   Unfortunately, there is no certain magic, but the following
#   strings have been found to be most likely.
0	string	NJPL1I00		PDS (JPL) image data|2473
2	string	NJPL1I			PDS (JPL) image data|2473
0	string	CCSD3ZF			PDS (CCSD) image data|2474
2	string	CCSD3Z			PDS (CCSD) image data|2474
0	string	PDS_			PDS image data|2475
0	string	LBLSIZE=		PDS (VICAR) image data|2476

# pM8x: ATARI STAD compressed bitmap format
#
# from Oskar Schirmer <schirmer@scara.com> Feb 2, 2001
# p M 8 5/6 xx yy zz data...
# Atari ST STAD bitmap is always 640x400, bytewise runlength compressed.
# bytes either run horizontally (pM85) or vertically (pM86). yy is the
# most frequent byte, xx and zz are runlength escape codes, where xx is
# used for runs of yy.
#
0	string	pM85		Atari ST STAD bitmap image data (hor)|2477
>5	byte	0x00		(white background)|2478
>5	byte	0xFF		(black background)|2479
0	string	pM86		Atari ST STAD bitmap image data (vert)|2480
>5	byte	0x00		(white background)|2481
>5	byte	0xFF		(black background)|2482

# From: Alex Myczko <alex@aiei.ch>
# http://www.atarimax.com/jindroush.atari.org/afmtatr.html
0	leshort	0x0296		Atari ATR image|2483

# XXX:
# This is bad magic 0x5249 == 'RI' conflicts with RIFF and other
# magic.
# SGI RICE image file <mpruett@sgi.com>
#0	beshort	0x5249		RICE image
#>2	beshort	x		v%d
#>4	beshort	x		(%d x
#>6	beshort	x		%d)
#>8	beshort	0		8 bit
#>8	beshort	1		10 bit
#>8	beshort	2		12 bit
#>8	beshort	3		13 bit
#>10	beshort	0		4:2:2
#>10	beshort	1		4:2:2:4
#>10	beshort	2		4:4:4
#>10	beshort	3		4:4:4:4
#>12	beshort	1		RGB
#>12	beshort	2		CCIR601
#>12	beshort	3		RP175
#>12	beshort	4		YUV

# PCX image files
# From: Dan Fandrich <dan@coneharvesters.com>
# updated by Joerg Jenderek at Feb 2013 by http://de.wikipedia.org/wiki/PCX
# http://web.archive.org/web/20100206055706/http://www.qzx.com/pc-gpe/pcx.txt
# GRR: original test was still too general as it catches xbase examples T5.DBT,T6.DBT with 0xa000000
# test for bytes 0x0a,version byte (0,2,3,4,5),compression byte flag(0,1), bit depth (>0) of PCX or T5.DBT,T6.DBT
0	ubelong&0xffF8fe00	0x0a000000
# for PCX bit depth > 0
>3	ubyte		>0
# test for valid versions
>>1	ubyte		<6
>>>1	ubyte		!1	PCX|2484
!:mime	image/x-pcx
#!:mime	image/pcx
>>>>1	ubyte		0	ver. 2.5 image data|2485
>>>>1	ubyte		2	ver. 2.8 image data, with palette|2486
>>>>1	ubyte		3	ver. 2.8 image data, without palette|2487
>>>>1	ubyte		4	for Windows image data|2488
>>>>1	ubyte		5	ver. 3.0 image data|2489
>>>>4	uleshort	x	bounding box [%d,
>>>>6	uleshort	x	%d] -
>>>>8	uleshort	x	[%d,
>>>>10	uleshort	x	%d],
>>>>65	ubyte		>1	%d planes each of
>>>>3	ubyte		x	%d-bit
>>>>68	byte		1	colour,
>>>>68	byte		2	grayscale,
# this should not happen
>>>>68	default		x	image,
>>>>12	leshort		>0	%d x
>>>>>14	uleshort	x	%d dpi,
>>>>2	byte		0	uncompressed
>>>>2	byte		1	RLE compressed

# Adobe Photoshop
# From: Asbjoern Sloth Toennesen <asbjorn@lila.io>
0	string		8BPS Adobe Photoshop Image|2490
!:mime	image/vnd.adobe.photoshop
>4   beshort 2 (PSB)|2490
>18  belong  x \b, %d x|2490
>14  belong  x %d,|2490
>24  beshort 0 bitmap|2490
>24  beshort 1 grayscale|2490
>>12 beshort 2 with alpha|2490
>24  beshort 2 indexed|2490
>24  beshort 3 RGB|2490
>>12 beshort 4 \bA|2490
>24  beshort 4 CMYK|2490
>>12 beshort 5 \bA|2490
>24  beshort 7 multichannel|2490
>24  beshort 8 duotone|2490
>24  beshort 9 lab|2490
>12  beshort > 1
>>12  beshort x \b, %dx|2490
>12  beshort 1 \b,|2490
>22  beshort x %d-bit channel|2490
>12  beshort > 1 \bs|2490

# XV thumbnail indicator (ThMO)
0	string		P7\ 332		XV thumbnail image data|2491

# NITF is defined by United States MIL-STD-2500A
0	string	NITF	National Imagery Transmission Format|2492
>25	string	>\0	dated %.14s|2492

# GEM Image: Version 1, Headerlen 8 (Wolfram Kleff)
# Format variations from: Bernd Nuernberger <bernd.nuernberger@web.de>
# Update: Joerg Jenderek
# See http://fileformats.archiveteam.org/wiki/GEM_Raster
# For variations, also see:
#    http://www.seasip.info/Gem/ff_img.html (Ventura)
#    http://www.atari-wiki.com/?title=IMG_file (XIMG, STTT)
#    http://www.fileformat.info/format/gemraster/spec/index.htm (XIMG, STTT)
#    http://sylvana.net/1stguide/1STGUIDE.ENG (TIMG)
0       beshort     0x0001
# header_size
>2      beshort     0x0008
>>0     use gem_info
>2      beshort     0x0009
>>0     use gem_info
# no example for NOSIG
>2      beshort     24
>>0     use gem_info
# no example for HYPERPAINT
>2      beshort     25
>>0     use gem_info
16      string      XIMG\0
>0      use gem_info
# no example
16      string      STTT\0\x10
>0      use gem_info
# no example or description
16      string      TIMG\0
>0      use gem_info

0   name        gem_info
# version is 2 for some XIMG and 1 for all others
>0	beshort		<0x0003		GEM|2493
# http://www.snowstone.org.uk/riscos/mimeman/mimemap.txt
!:mime	image/x-gem
# header_size 24 25 27 59 779 words for colored bitmaps
>>2	beshort		>9
>>>16	string		STTT\0\x10	STTT|2494
>>>16	string		TIMG\0		TIMG|2495
# HYPERPAINT or NOSIG variant
>>>16	string		\0\x80
>>>>2	beshort		=24		NOSIG|2496
>>>>2	beshort		!24		HYPERPAINT|2497
# NOSIG or XIMG variant
>>>16	default		x
>>>>16	string		!XIMG\0		NOSIG|2496
# header_size is 9 for Ventura files and 8 for other GEM Paint files
>>2	beshort		9		(Ventura)|2498
#>>2	beshort		8		(Paint)
>>16	string		=XIMG\0		XIMG Image data
!:ext	img/ximg
# to avoid Warning: Current entry does not yet have a description for adding a EXTENSION type
>>16	string		!XIMG\0		Image data
!:ext	img
>>12	beshort		x		%d x
>>14	beshort		x		%d,
# 1 4 8
>>4	beshort		x		%d planes,
# in tenths of a millimetre
>>8	beshort		x		%d x
>>10	beshort		x		%d pixelsize
# pattern_size 1-8. 2 for GEM Paint
>>6	beshort		!2		\b, pattern size %d

# GEM Metafile (Wolfram Kleff)
0	lelong		0x0018FFFF	GEM Metafile data|2499
>4	leshort		x		version %d|2499

#
# SMJPEG. A custom Motion JPEG format used by Loki Entertainment
# Software Torbjorn Andersson <d91tan@Update.UU.SE>.
#
0	string	\0\nSMJPEG	SMJPEG|2500
>8	belong	x		%d.x data|2501
# According to the specification you could find any number of _TXT
# headers here, but I can't think of any way of handling that. None of
# the SMJPEG files I tried it on used this feature. Even if such a
# file is encountered the output should still be reasonable.
>16	string	_SND		\b,|2500
>>24	beshort	>0		%d Hz|2500
>>26	byte	8		8-bit|2500
>>26	byte	16		16-bit|2500
>>28	string	NONE		uncompressed|2500
# >>28	string	APCM		ADPCM compressed
>>27	byte	1		mono|2500
>>28	byte	2		stereo|2500
# Help! Isn't there any way to avoid writing this part twice?
>>32	string	_VID		\b,|2500
# >>>48	string	JFIF		JPEG
>>>40	belong	>0		%d frames|2500
>>>44	beshort	>0		(%d x|2500
>>>46	beshort	>0		%d)|2500
>16	string	_VID		\b,|2500
# >>32	string	JFIF		JPEG
>>24	belong	>0		%d frames|2500
>>28	beshort	>0		(%d x|2500
>>30	beshort	>0		%d)|2500

0	string	Paint\ Shop\ Pro\ Image\ File	Paint Shop Pro Image File|2502

# "thumbnail file" (icon)
# descended from "xv", but in use by other applications as well (Wolfram Kleff)
0       string          P7\ 332         XV "thumbnail file" (icon) data|2503

# taken from fkiss: (<yav@mte.biglobe.ne.jp> ?)
0       string          KiSS            KISS/GS|2504
>4      byte            16              color|2505
>>5     byte            x               %d bit|2505
>>8     leshort         x               %d colors|2505
>>10    leshort         x               %d groups|2505
>4      byte            32              cell|2506
>>5     byte            x               %d bit|2506
>>8     leshort         x               %d x|2506
>>10    leshort         x               %d|2506
>>12    leshort         x               +%d|2506
>>14    leshort         x               +%d|2506

# Webshots (www.webshots.com), by John Harrison
0       string          C\253\221g\230\0\0\0 Webshots Desktop .wbz file|2507

# Hercules DASD image files
# From Jan Jaeger <jj@septa.nl>
0       string  CKD_P370        Hercules CKD DASD image file|2508
>8      long    x               \b, %d heads per cylinder|2508
>12     long    x               \b, track size %d bytes|2508
>16     byte    x               \b, device type 33%2.2X|2508

0       string  CKD_C370        Hercules compressed CKD DASD image file|2509
>8      long    x               \b, %d heads per cylinder|2509
>12     long    x               \b, track size %d bytes|2509
>16     byte    x               \b, device type 33%2.2X|2509

0       string  CKD_S370        Hercules CKD DASD shadow file|2510
>8      long    x               \b, %d heads per cylinder|2510
>12     long    x               \b, track size %d bytes|2510
>16     byte    x               \b, device type 33%2.2X|2510

# Squeak images and programs - etoffi@softhome.net
0	string		\146\031\0\0	Squeak image data|2511
0	search/1	'From\040Squeak	Squeak program text|2512

# partimage: file(1) magic for PartImage files (experimental, incomplete)
# Author: Hans-Joachim Baader <hjb@pro-linux.de>
0		string	PaRtImAgE-VoLuMe	PartImage|2513
>0x0020		string	0.6.1		file version %s|2514
>>0x0060	lelong	>-1		volume %d|2514
#>>0x0064 8 byte identifier
#>>0x007c reserved
>>0x0200	string	>\0		type %s|2514
>>0x1400	string	>\0		device %s,|2514
>>0x1600	string	>\0		original filename %s,|2514
# Some fields omitted
>>0x2744	lelong	0		not compressed|2514
>>0x2744	lelong	1		gzip compressed|2514
>>0x2744	lelong	2		bzip2 compressed|2514
>>0x2744	lelong	>2		compressed with unknown algorithm|2514
>0x0020		string	>0.6.1		file version %s|2513
>0x0020		string	<0.6.1		file version %s|2513

# DCX is multi-page PCX, using a simple header of up to 1024
# offsets for the respective PCX components.
# From: Joerg Wunsch <joerg_wunsch@uriah.heep.sax.de>
0	lelong	987654321	DCX multi-page PCX image data|2515

# Simon Walton <simonw@matteworld.com>
# Kodak Cineon format for scanned negatives
# http://www.kodak.com/US/en/motion/support/dlad/
0	lelong  0xd75f2a80	Cineon image data|2516
>200	belong  >0		\b, %d x|2516
>204	belong  >0		%d|2516


# Bio-Rad .PIC is an image format used by microscope control systems
# and related image processing software used by biologists.
# From: Vebjorn Ljosa <vebjorn@ljosa.com>
# BOOL values are two-byte integers; use them to rule out false positives.
# http://web.archive.org/web/20050317223257/www.cs.ubc.ca/spider/ladic/text/biorad.txt
# Samples: http://www.loci.wisc.edu/software/sample-data
14	leshort <2
>62	leshort <2
>>54	leshort 12345		Bio-Rad .PIC Image File|2517
>>>0	leshort >0		%d x|2517
>>>2	leshort >0		%d,|2517
>>>4	leshort =1		1 image in file|2517
>>>4	leshort >1		%d images in file|2517

# From Jan "Yenya" Kasprzak <kas@fi.muni.cz>
# The description of *.mrw format can be found at
# http://www.dalibor.cz/minolta/raw_file_format.htm
0	string	\000MRM			Minolta Dimage camera raw image data|2518

# Summary: DjVu image / document
# Extension: .djvu
# Reference: http://djvu.org/docs/DjVu3Spec.djvu
# Submitted by: Stephane Loeuillet <stephane.loeuillet@tiscali.fr>
# Modified by (1): Abel Cheung <abelcheung@gmail.com>
0	string	AT&TFORM
>12	string	DJVM		DjVu multiple page document|2519
!:mime	image/vnd.djvu
>12	string	DJVU		DjVu image or single page document|2520
!:mime	image/vnd.djvu
>12	string	DJVI		DjVu shared document|2521
!:mime	image/vnd.djvu
>12	string	THUM		DjVu page thumbnails|2522
!:mime	image/vnd.djvu

# Originally by Marc Espie
# Modified by Robert Minsk <robertminsk at yahoo.com>
# http://www.openexr.com/openexrfilelayout.pdf
0	lelong		20000630	OpenEXR image data,|2523
!:mime image/x-exr
>4	lelong&0x000000ff x		version %d,|2523
>4	lelong		^0x00000200	storage: scanline|2524
>4	lelong		&0x00000200	storage: tiled|2525
>8	search/0x1000	compression\0	\b, compression:
>>&16	byte		0		none
>>&16	byte		1		rle
>>&16	byte		2		zips
>>&16	byte		3		zip
>>&16	byte		4		piz
>>&16	byte		5		pxr24
>>&16	byte		6		b44
>>&16	byte		7		b44a
>>&16	byte		8		dwaa
>>&16	byte		9		dwab
>>&16	byte		>9		unknown
>8	 search/0x1000	dataWindow\0	\b, dataWindow:
>>&10	lelong		x		(%d
>>&14	lelong		x		%d)-
>>&18	lelong		x		\b(%d
>>&22	lelong		x		%d)
>8	search/0x1000	displayWindow\0	\b, displayWindow:
>>&10	lelong		x		(%d
>>&14	lelong		x		%d)-
>>&18	lelong		x		\b(%d
>>&22	lelong		x		%d)
>8	search/0x1000	lineOrder\0	 \b, lineOrder:
>>&14	byte		0		increasing y
>>&14	byte		1		decreasing y
>>&14	byte		2		random y
>>&14	byte		>2		unknown

# SMPTE Digital Picture Exchange Format, SMPTE DPX
#
# ANSI/SMPTE 268M-1994, SMPTE Standard for File Format for Digital
# Moving-Picture Exchange (DPX), v1.0, 18 February 1994
# Robert Minsk <robertminsk at yahoo.com>
# Modified by Harry Mallon <hjmallon at gmail.com>
0	string		SDPX	DPX image data, big-endian,|2526
!:mime image/x-dpx
>0	use		dpx_info
0	string		XPDS	DPX image data, little-endian,|2527
!:mime image/x-dpx
>0	use		\^dpx_info

0	name		dpx_info
>768	beshort		<4
>>772	belong		x	%dx
>>776	belong		x	\b%d,
>768	beshort		>3
>>776	belong		x	%dx
>>772	belong		x	\b%d,
>768	beshort		0	left to right/top to bottom
>768	beshort		1	right to left/top to bottom
>768	beshort		2	left to right/bottom to top
>768	beshort		3	right to left/bottom to top
>768	beshort		4	top to bottom/left to right
>768	beshort		5	top to bottom/right to left
>768	beshort		6	bottom to top/left to right
>768	beshort		7	bottom to top/right to left

# From: Tom Hilinski <tom.hilinski@comcast.net>
# http://www.unidata.ucar.edu/packages/netcdf/
0	string	CDF\001			NetCDF Data Format data|2528

#-----------------------------------------------------------------------
# Hierarchical Data Format, used to facilitate scientific data exchange
# specifications at http://hdf.ncsa.uiuc.edu/
0	belong	0x0e031301	Hierarchical Data Format (version 4) data|2529
!:mime	application/x-hdf
0	string	\211HDF\r\n\032\n	Hierarchical Data Format (version 5) data|2530
!:mime	application/x-hdf
512	string	\211HDF\r\n\032\n	Hierarchical Data Format (version 5) with 512 bytes user block|2531
!:mime	application/x-hdf
1024	string	\211HDF\r\n\032\n	Hierarchical Data Format (version 5) with 1k user block|2532
!:mime	application/x-hdf
2048	string	\211HDF\r\n\032\n	Hierarchical Data Format (version 5) with 2k user block|2533
!:mime	application/x-hdf
4096	string	\211HDF\r\n\032\n	Hierarchical Data Format (version 5) with 4k user block|2534
!:mime	application/x-hdf


# From: Tobias Burnus <burnus@net-b.de>
# Xara (for a while: Corel Xara) is a graphic package, see
# http://www.xara.com/ for Windows and as GPL application for Linux
0	string	XARA\243\243	Xara graphics file|2535

# http://www.cartesianinc.com/Tech/
0	string	CPC\262		Cartesian Perceptual Compression image|2536
!:mime	image/x-cpi

# From Albert Cahalan <acahalan@gmail.com>
# puredigital used it for the CVS disposable camcorder
#8       lelong  4       ZBM bitmap image data
#>4      leshort x       %u x
#>6      leshort x       %u

# From Albert Cahalan <acahalan@gmail.com>
# uncompressed 5:6:5 HighColor image for OLPC XO firmware icons
0       string C565     OLPC firmware icon image data|2537
>4      leshort x       %u x|2537
>6      leshort x       %u|2537

# Applied Images - Image files from Cytovision
# Gustavo Junior Alves <gjalves@gjalves.com.br>
0	string	\xce\xda\xde\xfa	Cytovision Metaphases file|2538
0	string	\xed\xad\xef\xac	Cytovision Karyotype file|2539
0	string	\x0b\x00\x03\x00	Cytovision FISH Probe file|2540
0	string	\xed\xfe\xda\xbe	Cytovision FLEX file|2541
0	string	\xed\xab\xed\xfe	Cytovision FLEX file|2541
0	string	\xad\xfd\xea\xad	Cytovision RATS file|2542

# Wavelet Scalar Quantization format used in gray-scale fingerprint images
# From Tano M Fotang <mfotang@quanteq.com>
0	string	\xff\xa0\xff\xa8\x00	Wavelet Scalar Quantization image data|2543

# Type:		PCO B16 image files
# URL:		http://www.pco.de/fileadmin/user_upload/db/download/MA_CWDCOPIE_0412b.pdf
# From:		Florian Philipp <florian.philipp@binarywings.net>
# Extension:	.b16
# Description:	Pixel image format produced by PCO Camware, typically used
#		together with PCO cameras.
# Note:		Different versions exist for e.g. 8 bit and 16 bit images.
#		Documentation is incomplete.
0	string/b	PCO-	PCO B16 image data|2544
>12	lelong		x	\b, %dx|2544
>16	lelong		x	\b%d|2544
>20	lelong		0	\b, short header|2545
>20	lelong		-1	\b, extended header|2546
>>24	lelong		0	\b, grayscale|2547
>>>36	lelong		0	linear LUT|2548
>>>36	lelong		1	logarithmic LUT|2549
>>>28	lelong		x	[%d
>>>32	lelong		x	\b,%d]
>>24	lelong		1	\b, color|2550
>>>64	lelong		0	linear LUT|2551
>>>64	lelong		1	logarithmic LUT|2552
>>>40	lelong		x	r[%d
>>>44	lelong		x	\b,%d]
>>>48	lelong		x	g[%d
>>>52	lelong		x	\b,%d]
>>>56	lelong		x	b[%d
>>>60	lelong		x	\b,%d]

# Polar Monitor Bitmap (.pmb) used as logo for Polar Electro watches
# From: Markus Heidelberg <markus.heidelberg at web.de>
0	string/t	[BitmapInfo2]	Polar Monitor Bitmap text|2553
!:mime	image/x-polar-monitor-bitmap

# From: Rick Richardson <rickrich@gmail.com>
# updated by: Joerg Jenderek
# URL: http://techmods.net/nuvi/
0	string	GARMIN\ BITMAP\ 01	Garmin Bitmap file|2554
# extension is also used for
# Sony SRF raw image (image/x-sony-srf)
# SRF map
# Terragen Surface Map (http://www.planetside.co.uk/terragen)
# FileLocator Pro search criteria file (http://www.mythicsoft.com/filelocatorpro)
!:ext srf
#!:mime	image/x-garmin-srf
# version 1.00,2.00,2.10,2.40,2.50
>0x2f	string		>0		\b, version %4.4s|2554
# width (2880,2881,3240)
>0x55	uleshort	>0		\b, %dx|2554
# height (80,90)
>>0x53	uleshort	x		\b%d|2554

# Type:	Ulead Photo Explorer5 (.pe5)
# URL:	http://www.jisyo.com/cgibin/view.cgi?EXT=pe5 (Japanese)
# From:	Simon Horman <horms@debian.org>
0	string	IIO2H			Ulead Photo Explorer5|2555

# Type:	X11 cursor
# URL:	http://webcvs.freedesktop.org/mime/shared-mime-info/freedesktop.org.xml.in?view=markup
# From:	Mathias Brodala <info@noctus.net>
0	string	Xcur			X11 cursor|2556

# Type:	Olympus ORF raw images.
# URL:	http://libopenraw.freedesktop.org/wiki/Olympus_ORF
# From:	Adam Buchbinder <adam.buchbinder@gmail.com>
0	string		MMOR		Olympus ORF raw image data, big-endian|2557
!:mime	image/x-olympus-orf
0	string		IIRO		Olympus ORF raw image data, little-endian|2558
!:mime	image/x-olympus-orf
0	string		IIRS		Olympus ORF raw image data, little-endian|2558
!:mime	image/x-olympus-orf

# Type: files used in modern AVCHD camcoders to store clip information
# Extension: .cpi
# From: Alexander Danilov <alexander.a.danilov@gmail.com>
0	string	HDMV0100	AVCHD Clip Information|2559

# From: Adam Buchbinder <adam.buchbinder@gmail.com>
# URL: http://local.wasp.uwa.edu.au/~pbourke/dataformats/pic/
# Radiance HDR; usually has .pic or .hdr extension.
0	string	#?RADIANCE\n	Radiance HDR image data|2560
#!mime	image/vnd.radiance

# From: Adam Buchbinder <adam.buchbinder@gmail.com>
# URL: http://www.mpi-inf.mpg.de/resources/pfstools/pfs_format_spec.pdf
# Used by the pfstools packages. The regex matches for the image size could
# probably use some work. The MIME type is made up; if there's one in
# actual common use, it should replace the one below.
0	string	PFS1\x0a	PFS HDR image data|2561
#!mime	image/x-pfs
>1	regex	[0-9]*\ 		\b, %s|2561
>>1	regex	\ [0-9]{4}		\bx%s|2561

# Type: Foveon X3F
# URL:  http://www.photofo.com/downloads/x3f-raw-format.pdf
# From: Adam Buchbinder <adam.buchbinder@gmail.com>
# Note that the MIME type isn't defined anywhere that I can find; if
# there's a canonical type for this format, it should replace this one.
0	string	FOVb	Foveon X3F raw image data|2562
!:mime	image/x-x3f
>6	leshort	x	\b, version %d.|2562
>4	leshort	x	\b%d|2562
>28	lelong	x	\b, %dx|2562
>32	lelong	x	\b%d|2562

# Paint.NET file
# From Adam Buchbinder <adam.buchbinder@gmail.com>
0	string	PDN3	Paint.NET image data|2563
!:mime	image/x-paintnet

# Not really an image.
# From: "Tano M. Fotang" <mfotang@quanteq.com>
0	string	\x46\x4d\x52\x00	ISO/IEC 19794-2 Format Minutiae Record (FMR)|2564

# doc: http://www.shikino.co.jp/eng/products/images/FLOWER.jpg.zip
# example: http://www.shikino.co.jp/eng/products/images/FLOWER.wdp.zip
90	bequad		0x574D50484F544F00	JPEG-XR Image|2565
>98	byte&0x08	=0x08			\b, hard tiling|2565
>99	byte&0x80	=0x80			\b, tiling present|2565
>99	byte&0x40	=0x40			\b, codestream present|2565
>99	byte&0x38	x			\b, spatial xform=|2565
>99	byte&0x38	0x00			\bTL|2565
>99	byte&0x38	0x08			\bBL|2565
>99	byte&0x38	0x10			\bTR|2565
>99	byte&0x38	0x18			\bBR|2565
>99	byte&0x38	0x20			\bBT|2565
>99	byte&0x38	0x28			\bRB|2565
>99	byte&0x38	0x30			\bLT|2565
>99	byte&0x38	0x38			\bLB|2565
>100	byte&0x80	=0x80			\b, short header|2565
>>102	beshort+1	x			\b, %d|2565
>>104	beshort+1	x			\bx%d|2565
>100	byte&0x80	=0x00			\b, long header|2565
>>102	belong+1	x			\b, %x|2565
>>106	belong+1	x			\bx%x|2565
>101	beshort&0xf	x			\b, bitdepth=|2565
>>101	beshort&0xf	0x0			\b1-WHITE=1|2565
>>101	beshort&0xf	0x1			\b8|2565
>>101	beshort&0xf	0x2			\b16|2565
>>101	beshort&0xf	0x3			\b16-SIGNED|2565
>>101	beshort&0xf	0x4			\b16-FLOAT|2565
>>101	beshort&0xf	0x5			\b(reserved 5)|2565
>>101	beshort&0xf	0x6			\b32-SIGNED|2565
>>101	beshort&0xf	0x7			\b32-FLOAT|2565
>>101	beshort&0xf	0x8			\b5|2565
>>101	beshort&0xf	0x9			\b10|2565
>>101	beshort&0xf	0xa			\b5-6-5|2565
>>101	beshort&0xf	0xb			\b(reserved %d)|2565
>>101	beshort&0xf	0xc			\b(reserved %d)|2565
>>101	beshort&0xf	0xd			\b(reserved %d)|2565
>>101	beshort&0xf	0xe			\b(reserved %d)|2565
>>101	beshort&0xf	0xf			\b1-BLACK=1|2565
>101	beshort&0xf0	x			\b, colorfmt=|2565
>>101	beshort&0xf0	0x00			\bYONLY|2565
>>101	beshort&0xf0	0x10			\bYUV240|2565
>>101	beshort&0xf0	0x20			\bYWV422|2565
>>101	beshort&0xf0	0x30			\bYWV444|2565
>>101	beshort&0xf0	0x40			\bCMYK|2565
>>101	beshort&0xf0	0x50			\bCMYKDIRECT|2565
>>101	beshort&0xf0	0x60			\bNCOMPONENT|2565
>>101	beshort&0xf0	0x70			\bRGB|2565
>>101	beshort&0xf0	0x80			\bRGBE|2565
>>101	beshort&0xf0	>0x80			\b(reserved 0x%x)|2565

# From: Johan van der Knijff <johan.vanderknijff@kb.nl>
#
# BPG (Better Portable Graphics) format
# http://bellard.org/bpg/
# http://fileformats.archiveteam.org/wiki/BPG
#
0	string	\x42\x50\x47\xFB	BPG (Better Portable Graphics)|2566
!:mime  image/bpg

# From: Joerg Jenderek
# URL: https://en.wikipedia.org/wiki/Apple_Icon_Image_format
0	string		icns		Mac OS X icon|2567
!:mime	image/x-icns
!:apple	????icns
!:ext icns
>4	ubelong		>0
# file size
>>4	ubelong		x		\b, %d bytes|2567
# icon type
>>8	string		x		\b, "%4.4s" type|2567

# TIM images
0		lelong		0x00000010	TIM image,|2568
>4		lelong  	0x8		4-Bit,|2569
>4		lelong  	0x9		8-Bit,|2570
>4		lelong  	0x2		15-Bit,|2571
>4		lelong  	0x3		24-Bit,|2572
>4		lelong 		&8
>>(8.l+12)	leshort		x		Pixel at (%d,
>>(8.l+14)	leshort		x		\b%d)
>>(8.l+16)	leshort		x		Size=%dx
>>(8.l+18)	leshort		x		\b%d,
>>4		lelong 		0x8		16 CLUT Entries at
>>4		lelong 		0x9		256 CLUT Entries at
>>12		leshort		x		(%d,
>>14		leshort		x		\b%d)
>4		lelong		^8
>>12		leshort		x		Pixel at (%d,
>>14		leshort		x		\b%d)
>>16		leshort		x		Size=%dx
>>18		leshort		x		\b%d

# MDEC streams
0		lelong		0x80010160	MDEC video stream,|2573
>16		leshort		x		%dx|2573
>18		leshort		x		\b%d|2573
#>8		lelong		x		%d frames
#>4		leshort		x		secCount=%d;
#>6		leshort		x		nSectors=%d;
#>12		lelong		x		frameSize=%d;

# BS encoded bitstreams
2		leshort		0x3800		BS image,|2574
>6		leshort		x		Version %d,|2574
>4		leshort		x		Quantization %d,|2574
>0		leshort		x		(Decompresses to %d words)|2574

# Type: farbfeld image.
# Url: http://tools.suckless.org/farbfeld/
# From: Ian D. Scott <ian@iandouglasscott.com>
#
0		string		farbfeld	farbfeld image data,|2575
>8		ubelong		x		%dx|2575
>12		ubelong		x		\b%d|2575

# Type: Microsoft DirectDraw Surface (common data)
# URL:	http://msdn.microsoft.com/library/default.asp?url=/library/en-us/directx9_c/directx/graphics/reference/DDSFileReference/ddsfileformat.asp
# From: Morten Hustveit <morten@debian.org>
# Updated by: David Korth <gerbilsoft@gerbilsoft.com>
0	name	ms-directdraw-surface
>0x10	ulelong	x			%u x
>0x0C	ulelong	x			%u
# Color depth.
>0x58	ulelong	>0			\b, %u-bit color
# Determine the pixel format.
>0x50	ulelong&0x4	4
# FIXME: Handle DX10 and XBOX formats.
>>0x54	string	x			\b, compressed using %.4s
>0x50	ulelong&0x2	0x2		\b, alpha only
>0x50	ulelong&0x200	0x200		\b, YUV
>0x50	ulelong&0x20000	0x20000		\b, luminance
# RGB pixel format
>0x50	ulelong&0x40	0x40

# Determine the RGB format using the color masks.
# ulequad order: 0xGGGGGGGGRRRRRRRR, 0xAAAAAAAABBBBBBBB

>>0x58		ulelong	16

# NOTE: 15-bit color formats usually have 16-bit listed as the color depth.
>>>0x5C		ulequad	0x000003E000007C00
>>>>0x64	ulequad 0x000000000000001F	\b, RGB555
>>>0x5C		ulequad	0x000003E000001F00
>>>>0x64	ulequad 0x000000000000007C	\b, BGR555

>>>0x5C		ulequad	0x000007E00000F800
>>>>0x64	ulequad 0x000000000000001F	\b, RGB565
>>>0x5C		ulequad	0x000007E000001F00
>>>>0x64	ulequad 0x00000000000000F8	\b, BGR565

>>>0x5C		ulequad	0x000000F000000F00
>>>>0x64	ulequad 0x0000F0000000000F	\b, ARGB4444
>>>0x5C		ulequad	0x000000F00000000F
>>>>0x64	ulequad 0x0000F00000000F00	\b, ABGR4444

>>>0x5C		ulequad	0x00000F000000F000
>>>>0x64	ulequad 0x0000000F000000F0	\b, RGBA4444
>>>0x5C		ulequad	0x00000F00000000F0
>>>>0x64	ulequad 0x0000000F0000F000	\b, BGRA4444

>>>0x5C		ulequad	0x000000F000000F00
>>>>0x64	ulequad 0x000000000000000F	\b, xRGB4444
>>>0x5C		ulequad	0x000000F00000000F
>>>>0x64	ulequad 0x0000000000000F00	\b, xBGR4444

>>>0x5C		ulequad	0x00000F000000F000
>>>>0x64	ulequad 0x00000000000000F0	\b, RGBx4444
>>>0x5C		ulequad	0x00000F00000000F0
>>>>0x64	ulequad 0x000000000000F000	\b, BGRx4444

>>>0x5C		ulequad	0x000003E000007C00
>>>>0x64	ulequad 0x000080000000001F	\b, ARGB1555
>>>0x5C		ulequad	0x000003E000001F00
>>>>0x64	ulequad 0x000080000000007C	\b, ABGR1555
>>>0x5C		ulequad	0x000007C00000F800
>>>>0x64	ulequad 0x000000010000003E	\b, RGBA5551
>>>0x5C		ulequad	0x000007C00000003E
>>>>0x64	ulequad 0x000000010000F800	\b, BGRA5551

>>88		ulelong 24
>>>0x5C		ulequad	0x0000FF0000FF0000
>>>>0x64	ulequad 0x00000000000000FF	\b, RGB888
>>>0x5C		ulequad	0x0000FF00000000FF
>>>>0x64	ulequad 0x0000000000FF0000	\b, BGR888

>>88		ulelong 32
>>>0x5C		ulequad	0x0000FF0000FF0000
>>>>0x64	ulequad 0xFF000000000000FF	\b, ARGB8888
>>>0x5C		ulequad	0x0000FF00000000FF
>>>>0x64	ulequad 0xFF00000000FF0000	\b, ABGR8888

>>>0x5C		ulequad	0x00FF0000FF000000
>>>>0x64	ulequad 0x000000FF0000FF00	\b, RGBA8888
>>>0x5C		ulequad	0x00FF00000000FF00
>>>>0x64	ulequad 0x000000FFFF000000	\b, BGBA8888

>>>0x5C		ulequad	0x0000FF0000FF0000
>>>>0x64	ulequad 0x00000000000000FF	\b, xRGB8888
>>>0x5C		ulequad	0x0000FF00000000FF
>>>>0x64	ulequad 0x0000000000FF0000	\b, xBGR8888

>>>0x5C		ulequad	0x00FF0000FF000000
>>>>0x64	ulequad 0x000000000000FF00	\b, RGBx8888
>>>0x5C		ulequad	0x00FF00000000FF00
>>>>0x64	ulequad 0x00000000FF000000	\b, BGBx8888

# Less common 32-bit color formats.
>>>0x5C		ulequad	0xFFFF00000000FFFF
>>>>0x64	ulequad 0x0000000000000000	\b, G16R16
>>>0x5C		ulequad	0x0000FFFFFFFF0000
>>>>0x64	ulequad 0x0000000000000000	\b, R16G16

>>>0x5C		ulequad	0x000FFC003FF00000
>>>>0x64	ulequad 0xC0000000000003FF	\b, A2R10G10B10
>>>0x5C		ulequad	0x000FFC00000003FF
>>>>0x64	ulequad 0xC00000003FF00000	\b, A2B10G10R10

# Type: Microsoft DirectDraw Surface
# URL:	http://msdn.microsoft.com/library/default.asp?url=/library/en-us/directx9_c/directx/graphics/reference/DDSFileReference/ddsfileformat.asp
# From: Morten Hustveit <morten@debian.org>
# Updated by: David Korth <gerbilsoft@gerbilsoft.com>
0	string/b	DDS\040\174\000\000\000 Microsoft DirectDraw Surface (DDS):|2576
>0	use	ms-directdraw-surface

# Type: Sega PVR image.
# From: David Korth <gerbilsoft@gerbilsoft.com>
# References:
# - http://fabiensanglard.net/Mykaruga/tools/segaPVRFormat.txt
# - https://github.com/yazgoo/pvrx2png
# - https://github.com/nickworonekin/puyotools

# Sega PVR header.
0	name	sega-pvr-image-header
>0x0C	leshort	x	%u x
>0x0E	leshort	x	%u
# Image format.
>0x08	byte	0	\b, ARGB1555
>0x08	byte	1	\b, RGB565
>0x08	byte	2	\b, ARGB4444
>0x08	byte	3	\b, YUV442
>0x08	byte	4	\b, Bump
>0x08	byte	5	\b, 4bpp
>0x08	byte	6	\b, 8bpp
# Image data type.
>0x09	byte	0x01	\b, square twiddled
>0x09	byte	0x02	\b, square twiddled & mipmap
>0x09	byte	0x03	\b, VQ
>0x09	byte	0x04	\b, VQ & mipmap
>0x09	byte	0x05	\b, 8-bit CLUT twiddled
>0x09	byte	0x06	\b, 4-bit CLUT twiddled
>0x09	byte	0x07	\b, 8-bit direct twiddled
>0x09	byte	0x08	\b, 4-bit direct twiddled
>0x09	byte	0x09	\b, rectangle
>0x09	byte	0x0B	\b, rectangular stride
>0x09	byte	0x0D	\b, rectangular twiddled
>0x09	byte	0x10	\b, small VQ
>0x09	byte	0x11	\b, small VQ & mipmap
>0x09	byte	0x12	\b, square twiddled & mipmap

# Sega PVR image.
0	string	PVRT
>0x10	string	DDS\040\174\000\000\000 Sega PVR (Xbox) image:|2577
>>0x20	use	ms-directdraw-surface
>0x10	belong	!0x44445320		Sega PVR image:|2577
>>0	use	sega-pvr-image-header

# Sega PVR image with GBIX.
0	string	GBIX
>0x10	string	PVRT
>>0x10	string	DDS\040\174\000\000\000 Sega PVR (Xbox) image:|2577
>>>0x20	use	ms-directdraw-surface
>>0x10	belong	!0x44445320		Sega PVR image:|2577
>>>0x10	use	sega-pvr-image-header
>>0x08	lelong	x	\b, global index = %u|2577

# Sega GVR header.
0	name	sega-gvr-image-header
>0x0C	beshort	x	%u x
>0x0E	beshort	x	%u
# Image data format.
>0x0B	byte	0	\b, I4
>0x0B	byte	1	\b, I8
>0x0B	byte	2	\b, IA4
>0x0B	byte	3	\b, IA8
>0x0B	byte	4	\b, RGB565
>0x0B	byte	5	\b, RGB5A3
>0x0B	byte	6	\b, ARGB8888
>0x0B	byte	8	\b, CI4
>0x0B	byte	9	\b, CI8
>0x0B	byte	14	\b, DXT1

# Sega GVR image.
0	string	GVRT	Sega GVR image:|2578
>0x10	use	sega-gvr-image-header

# Sega GVR image with GBIX.
0	string	GBIX
>0x10	string	GVRT	Sega GVR image:|2578
>>0x10	use	sega-gvr-image-header
>>0x08	belong	x	\b, global index = %u|2578

# Sega GVR image with GCIX. (Wii)
0	string	GCIX
>0x10	string	GVRT	Sega GVR image:|2578
>>0x10	use	sega-gvr-image-header
>>0x08	belong	x	\b, global index = %u|2578

# Light Field Picture
# Documentation: http://optics.miloush.net/lytro/TheFileFormat.aspx
# Typical file extensions: .lfp .lfr .lfx

0	belong	0x894C4650
>4	belong	0x0D0A1A0A
>12	belong	0x00000000	Lytro Light Field Picture|2579
>8	belong	x		\b, version %d

# Type: Vision Research Phantom CINE Format
# URL: https://www.phantomhighspeed.com/
# URL2: http://phantomhighspeed.force.com/vriknowledge/servlet/fileField?id=0BEU0000000Cfyk
# From: Harry Mallon <hjmallon at gmail.com>
#
# This has a short "CI" code but the 44 is the size of the struct which is
# stable
0	string	CI
>2	leshort 44		Vision Research CINE Video,|2580
>>4	leshort	0		Grayscale,|2581
>>4	leshort 1		JPEG Compressed,|2582
>>4	leshort 2		RAW,|2583
>>6	leshort x		version %d,
>>20	lelong	x		%d frames,
>>48	lelong	x		%dx
>>52	lelong	x		\b%d

# Type: ARRI Raw Image
# Info: SMPTE RDD30:2014
# From: Harry Mallon <hjmallon at gmail.com>
0	string ARRI		ARRI ARI image data,|2584
>4	lelong 0x78563412	little-endian,|2585
>4 	lelong 0x12345678	big-endian,|2586
>12	lelong x		version %d,
>20	lelong x 		%dx
>24	lelong x		\b%d

# Type: Khronos KTX texture.
# From: David Korth <gerbilsoft@gerbilsoft.com>
# References:
# - https://www.khronos.org/opengles/sdk/tools/KTX/file_format_spec/

# glEnum decoding.
# NOTE: Only the most common formats are listed here.
0	name	khronos-ktx-glEnum
>0	lelong	0x1907	\b, RGB
>0	lelong	0x1908	\b, RGBA
>0	lelong	0x1909	\b, LUMINANCE
>0	lelong	0x190A	\b, LUMINANCE_ALPHA
>0	lelong	0x80E1	\b, BGR
>0	lelong	0x80E2	\b, BGRA
>0	lelong	0x83A0	\b, RGB_S3TC
>0	lelong	0x83A1	\b, RGB4_S3TC
>0	lelong	0x83A2	\b, RGBA_S3TC
>0	lelong	0x83A3	\b, RGBA4_S3TC
>0	lelong	0x83A4	\b, RGBA_DXT5_S3TC
>0	lelong	0x83A5	\b, RGBA4_DXT5_S3TC
>0	lelong	0x8D64	\b, ETC1_RGB8_OES
>0	lelong	0x9270	\b, COMPRESSED_R11_EAC
>0	lelong	0x9271	\b, COMPRESSED_SIGNED_R11_EAC
>0	lelong	0x9272	\b, COMPRESSED_RG11_EAC
>0	lelong	0x9273	\b, COMPRESSED_SIGNED_RG11_EAC
>0	lelong	0x9274	\b, COMPRESSED_RGB8_ETC2
>0	lelong	0x9275	\b, COMPRESSED_SRGB8_ETC2
>0	lelong	0x9276	\b, COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2
>0	lelong	0x9277	\b, COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2
>0	lelong	0x9278	\b, COMPRESSED_RGBA2_ETC2_EAC
>0	lelong	0x9279	\b, COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
>0	lelong	0x93B0	\b, COMPRESSED_RGBA_ASTC_4x4_KHR
>0	lelong	0x93B1	\b, COMPRESSED_RGBA_ASTC_5x4_KHR
>0	lelong	0x93B2	\b, COMPRESSED_RGBA_ASTC_5x5_KHR
>0	lelong	0x93B3	\b, COMPRESSED_RGBA_ASTC_6x5_KHR
>0	lelong	0x93B4	\b, COMPRESSED_RGBA_ASTC_6x6_KHR
>0	lelong	0x93B5	\b, COMPRESSED_RGBA_ASTC_8x5_KHR
>0	lelong	0x93B6	\b, COMPRESSED_RGBA_ASTC_8x6_KHR
>0	lelong	0x93B7	\b, COMPRESSED_RGBA_ASTC_8x8_KHR
>0	lelong	0x93B8	\b, COMPRESSED_RGBA_ASTC_10x5_KHR
>0	lelong	0x93B9	\b, COMPRESSED_RGBA_ASTC_10x6_KHR
>0	lelong	0x93BA	\b, COMPRESSED_RGBA_ASTC_10x8_KHR
>0	lelong	0x93BB	\b, COMPRESSED_RGBA_ASTC_10x10_KHR
>0	lelong	0x93BC	\b, COMPRESSED_RGBA_ASTC_12x10_KHR
>0	lelong	0x93BD	\b, COMPRESSED_RGBA_ASTC_12x12_KHR
>0	lelong	0x93D0	\b, COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR
>0	lelong	0x93D1	\b, COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR
>0	lelong	0x93D2	\b, COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR
>0	lelong	0x93D3	\b, COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR
>0	lelong	0x93D4	\b, COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR
>0	lelong	0x93D5	\b, COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR
>0	lelong	0x93D6	\b, COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR
>0	lelong	0x93D7	\b, COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR
>0	lelong	0x93D8	\b, COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR
>0	lelong	0x93D9	\b, COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR
>0	lelong	0x93DA	\b, COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR
>0	lelong	0x93DB	\b, COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR
>0	lelong	0x93DC	\b, COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR
>0	lelong	0x93DD	\b, COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR

# Endian-specific KTX header.
# TODO: glType (all textures I've seen so far are GL_UNSIGNED_BYTE)
0	name	khronos-ktx-endian-header
>20	lelong	x	\b, %u
>24	lelong	>1	x %u
>28	lelong	>1	x %u
>8	lelong	>0
>>8	use	khronos-ktx-glEnum
>8	lelong	0
>>12	use	khronos-ktx-glEnum

# Main KTX header.
# Determine endianness, then check the rest of the header.
0	string	\xABKTX\ 11\xBB\r\n\x1A\n	Khronos KTX texture|2587
>12	lelong	0x04030201			(little-endian)|2587
>>16	use	khronos-ktx-endian-header
>12	belong	0x04030201			(big-endian)|2587
>>16	use	^khronos-ktx-endian-header

# Type: Valve VTF texture.
# From: David Korth <gerbilsoft@gerbilsoft.com>
# References:
# - https://developer.valvesoftware.com/wiki/Valve_Texture_Format

# VTF image formats.
0	name	vtf-image-format
>0	lelong	0	RGBA8888
>0	lelong	1	ABGR8888
>0	lelong	2	RGB888
>0	lelong	3	BGR888
>0	lelong	4	RGB565
>0	lelong	5	I8
>0	lelong	6	IA88
>0	lelong	7	P8
>0	lelong	8	A8
>0	lelong	9	RGB888 (bluescreen)
>0	lelong	10	BGR888 (bluescreen)
>0	lelong	11	ARGB8888
>0	lelong	12	BGRA8888
>0	lelong	13	DXT1
>0	lelong	14	DXT3
>0	lelong	15	DXT5
>0	lelong	16	BGRx8888
>0	lelong	17	BGR565
>0	lelong	18	BGRx5551
>0	lelong	19	BGRA4444
>0	lelong	20	DXT1+A1
>0	lelong	21	BGRA5551
>0	lelong	22	UV88
>0	lelong	23	UVWQ8888
>0	lelong	24	RGBA16161616F
>0	lelong	25	RGBA16161616
>0	lelong	26	UVLX8888

# Main VTF header.
0	string	VTF\0				Valve Texture Format|2588
>4	lelong	x				v%u|2588
>8	lelong	x				\b.%u|2588
>0x10	leshort	x				\b, %u|2588
>0x12	leshort	>1				x %u|2588
>4	lequad	0x0000000700000002
>>0x3F	leshort	>1				x %u|2588
>0x18	leshort	>1				\b, %u frames|2588
>0x38	byte	x				\b, mipmaps: %u|2588
>0x34	lelong	>-1				\b,|2588
>>0x34	use	vtf-image-format

# Type: Valve VTF3 (PS3) texture.
# From: David Korth <gerbilsoft@gerbilsoft.com>
0	string		VTF3	Valve Texture Format (PS3)|2589
>0x14	beshort		x	\b, %u|2589
>0x16	beshort		x	\b x %u|2590
>0x10	belong&0x2000	0	\b, DXT1|2591
>0x10	belong&0x2000	0x2000	\b, DXT5|2592

# Type: ASTC texture.
# From: David Korth <gerbilsoft@gerbilsoft.com>
# References:
# - https://stackoverflow.com/questions/22600678/determine-internal-format-of-given-astc-compressed-image-through-its-header
# - https://stackoverflow.com/a/22682244
0	lelong	0x5ca1ab13			ASTC|2593
>4	byte	x				%u|2593
>5	byte	x				\bx%u|2593
>6	byte	>1				\bx%u|2593
# X, Y, and Z dimensions are stored as 24-bit LE.
# Pretend it's 32-bit and mask off the high byte.
>7	lelong&0x00FFFFFF	x		texture, %u|2593
>10	lelong&0x00FFFFFF	x		x %u|2593
>13	lelong&0x00FFFFFF	>1		x %u|2593

# Zebra Metafile graphic
# http://www.fileformat.info/format/zbr/egff.htm
0	beshort	0x9a02	Zebra Metafile graphic|2594
>2	leshort 1	(version 1.x)|2595
>2	leshort	2	(version 1.1x or 1.2x)|2596
>2	leshort	3	(version 1.49)|2597
>2	leshort	4	(version 1.50)|2598
>4	string	x	(comment = %s)

# Microsoft Paint graphic
# http://www.fileformat.info/format/mspaint/egff.htm
0	string	DanM 	icrosoft Paint image data (version 1.x)|2599
>4	leshort	x	(%d|2599
>>6	leshort	x	x %d)|2599
0	string	LinS 	Microsoft Paint image data (version 2.0)|2600
>4	leshort	x	(%d|2600
>>6	leshort	x	x %d)|2600

# reMarkable tablet internal file format (https://www.remarkable.com/)
# https://github.com/ax3l/lines-are-beautiful
# https://plasma.ninja/blog/devices/remarkable/binary/format/2017/12/26/\
#	reMarkable-lines-file-format.html#what-to-do-next
# from Axel Huebl
0		string	reMarkable
>11		string	lines
>>17		string	with
>>>22		string	selections
>>>>33		string	and
>>>>>37		string	layers
>>>>>>43	lelong	x	reMarkable tablet notebook lines, 1404 x 1872, %x page(s)|2601

# newer per-page files for the reMarkable
0		string	reMarkable
>11		string	.lines
>>18		string	file,
>>>24		string	version=
>>>>32		byte	x	reMarkable tablet page (v%c), 1404 x 1872,|2602
>>>>>43		lelong	x	%d layer(s)|2602
